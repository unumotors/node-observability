image: node:18.12-alpine

stages:
- build
- test
- release

before_script:
- echo "@cloud:registry=https://gitlab.unueng.com/api/v4/packages/npm/" > ~/.npmrc
- echo "@infrastructure:registry=https://gitlab.unueng.com/api/v4/packages/npm/" >> ~/.npmrc
- echo "@cas:registry=https://gitlab.unueng.com/api/v4/packages/npm/" >> ~/.npmrc
- echo "//${CI_SERVER_HOST}/api/v4/packages/npm/:_authToken=${CI_JOB_TOKEN}" >> ~/.npmrc
- echo "//${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}" >> ~/.npmrc
# Give access to write to the public NPM repo
- echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> ~/.npmrc

services:
  - name: mongo:5.0
    alias: mongodb
  - name: rabbitmq:3.8-management-alpine
    alias: rabbitmq

setup:
  stage: build
  script:
  - npm install
  cache:
    policy: pull-push
    paths:
    - node_modules/

test:
  stage: test
  script:
  # Wait for RabbitMQ to be running
  - while ! nc -z localhost 15692 ; do sleep 1 ; done
  - npm run test
  - npm run test-coverage
  cache:
    policy: pull
    paths:
    - node_modules/
  coverage: '/Statements.*?(\d+(?:\.\d+)?)%/'
  artifacts:
    reports:
      junit: results.xml

# Verify our code works with multiple node versions
test-node16:
  image: node:16.15-alpine
  stage: test
  script:
  # Wait for RabbitMQ to be running
  - while ! nc -z localhost 15692 ; do sleep 1 ; done
  - npm i
  - npm run test

lint:
  stage: test
  script:
  - npm run lint
  cache:
    policy: pull
    paths:
    - node_modules/

audit:
  stage: test
  script:
  - npm audit --registry https://registry.npmjs.org/ --production
  cache:
    policy: pull
    paths:
    - node_modules/
  allow_failure: true

publish:
  stage: release
  script: npm publish --access public
  only:
    refs:
    - tags
